# Default values for bluesky-pds.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/bluesky-social/pds
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

pds:
  config:
    hostname: "pds.example.com"
    secrets:

      # Generated if not set
      jwtSecret: "" # randAlphaNum 16
      plcRotationKey: "" # 64-byte ECDSA Hex
      adminPassword: "" # randAlphaNum 16

      # Sendgrid - 'smtps://apikey:<SENDGRID_API_KEY>@smtp.sendgrid.net:465/'
      # Resend - 'smtps://resend:<RESEND_API_KEY>@smtp.resend.com:465/'
      emailSmtpUrl: ""

      ## Set the value for existingSecret to use a pre-created secret for jwtSecret, adminPassword, plcRotationKey, and emailSmtpUrl
      #existingSecret : ""
    emailFromAddress: "bsky@example.com"
    dataDir: "/pds"
    blobstoreLocation: "/pds/blocks"
    didPlcUrl: "https://plc.directory"
    bskyAppViewUrl: "https://api.bsky.app"
    bskyAppViewDid: "did:web:api.bsky.app"
    reportSvcUrl: "https://mod.bsky.app"
    reportSvcDid: "did:plc:ar7c4by46qjdydhdevvrndac"
    crawlers: "https://bsky.network"
  dataStorage:
    size: 20Gi
    mountPath: "/pds"
    storageClass: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 3000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: pds.example.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: pds-example-tls
  #    hosts:
  #      - pds-example-com

resources:
  limits:
    cpu: 1
    memory: 1024Mi
  requests:
    cpu: 1
    memory: 1024Mi

nodeSelector: {}

tolerations: []

affinity: {}
